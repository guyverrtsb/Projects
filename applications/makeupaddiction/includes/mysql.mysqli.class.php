<?php/*** MySQL Database Connection Class* @access public* @package SPLIB*/class MySQL {    var $dbHost;    var $dbUser;    var $dbPass;    var $dbName;    var $dbConn;    var $connectError = false;    function MySQL ()    {		$this->connectToDb();    }    function connectToDb ()    {        $this->dbHost = $this->getConnectionVariable("application", "hostname");        $this->dbName = $this->getConnectionVariable("application", "database");        $this->dbUser = $this->getConnectionVariable("application", "username");        $this->dbPass = $this->getConnectionVariable("application", "password");                $this->dbConn = new mysqli($this->dbHost,                        $this->dbUser,                        $this->dbPass,                        $this->dbName);        if ($this->dbConn->connect_errno) {            printf("Can't connect to MySQL Server. Errorcode: %s\n", $this->dbConn->connect_error);            $this->connectError = true;            exit;        }        else        {
            error_log("CONNECTION_GOOD", 0);        }    }    function isError ()    {        if ($this->connectError)        {           error_log("ERROR_FOUND", 0);            return true;        }        $error = $this->dbConn->connect_error;        if ( empty ($error) )       {           error_log($error, 0);            return false;       }        else            return true;    }    function query($sql)    {       error_log("query:".$sql, 0);        $queryResource;        if ($this->dbConn == '')        {            error_log("RECONNECT", 0);            $this->connectToDb();        }        else        {
               error_log("CONNECT_GOOD", 0);        }        if ($queryResource = $this->dbConn->query($query, MYSQLI_USE_RESULT))        {            error_log("good:", 0);            return new MySQLResult($this, $queryResource);        }           error_log("bad:", 0);        return new MySQLResult($this, $queryResource);    }	//Transaction auto commit is off	function begainTransaction(){		$this->query("SET AUTOCOMMIT=0");		$this->query("START TRANSACTION");	}	//Transaction auto commit is on	function commit(){		$this->query("COMMIT");		$this->query("SET AUTOCOMMIT=1");	}	function rollBack(){		$this->query("ROLLBACK");		$this->query("SET AUTOCOMMIT=1");	}	    function getConnectionVariable($db, $param)    {        //error_log("getConnectionVariable:", 0);        $connectionsXML = realpath("C:/usr/www/dynamic/cluster/php/guyverdesigns/webapp/makeupaddiction/ZDBCONNECTIONS.xml");        //error_log($connectionsXML, 0);        $xml = simplexml_load_file($connectionsXML);        foreach($xml->children() as $dbconfig)        {            if($dbconfig->getName() == $db)            {                foreach($dbconfig->children() as $paramconfig)                {                    if($paramconfig->getName() == $param)                    {                        $output = $paramconfig;                        //error_log($output, 0);                        return $output;                    }                }            }        }        return $output;    }}/*** MySQLResult Data Fetching Class* @access public* @package SPLIB*/class MySQLResult {    var $mysql;    var $query;    function MySQLResult(& $mysql, $query) {        $this->mysql=& $mysql;        $this->query = $query;    }    function fetch () {        if ( $row = mysqli_fetch_array($this->query, MYSQL_ASSOC) ) {            return $row;        } else if ( $this->size() > 0 )        {            mysqli_data_seek($this->query,0);            return false;        } else {            return false;        }    }	function fetchAsso () {		if ( $row=mysqli_fetch_assoc($this->query) ) {			return $row;		} else if ( $this->size() > 0 ) {			mysqli_data_seek($this->query,0);			return false;		} else {			return false;		}	}    function size ()    {        return mysqli_num_rows($this->query);    }    function fields ()    {        return mysqli_num_fields($this->query);    }    function insertID ()    {        return mysqli_insert_id($this->mysql->dbConn);    }    function isError ()    {        return $this->mysql->isError();    }}error_log("mysql.mysqli.class.php", 0);?>